{"version":3,"sources":["components/ImageGalleryItem/default.jpeg","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","services/imagesApi.js","App.js","index.js"],"names":["ImageGalleryItem","src","dataUrl","alt","onClick","data-url","className","defaultProps","webformatURL","defaultImg","largeImageURL","ImageGallery","images","map","image","tags","id","Searchbar","onSubmit","useState","query","setQuery","e","preventDefault","type","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","target","window","addEventListener","this","removeEventListener","children","Component","Button","searchQuery","currentPage","axios","get","then","response","data","hits","App","setImages","setSearchQuery","setCurrentPage","modalImgUrl","setModalImgUrl","showModal","setShowModal","isLoading","setIsLoading","error","setError","useEffect","imagesApi","resImages","prevImages","scrollToLoadBtn","catch","message","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","shouldRenderBtn","length","largeImgUrl","prevShowModal","color","height","width","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ec5666b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.2e01288c.jpeg\";","import PropTypes from 'prop-types';\nimport defaultImg from './default.jpeg';\n\nconst ImageGalleryItem = ({ src, dataUrl, alt, onClick }) => {\n  const modalImage = () => onClick(dataUrl);\n  return (\n    <>\n      <img\n        src={src}\n        alt={alt}\n        data-url={dataUrl}\n        className=\"ImageGalleryItem-image\"\n        onClick={modalImage}\n      />\n    </>\n  );\n};\n\nImageGalleryItem.defaultProps = {\n  alt: 'Фото',\n  webformatURL: defaultImg,\n  largeImageURL: defaultImg,\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  dataUrl: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className=\"ImageGallery\" >\n    {images.map(image => (\n      <li key={image.id} className=\"ImageGalleryItem\">\n        <ImageGalleryItem\n          src={image.webformatURL}\n          alt={image.tags}\n          onClick={onClick}\n          dataUrl={image.largeImageURL}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","// import { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// class Searchbar extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   };\n//   state = { query: '' };\n\n//   handleChange = e => {\n//     this.setState({ query: e.currentTarget.value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state.query);\n//     this.setState({ query: '' });\n//   };\n\n//   render() {\n//     return (\n//       <header className=\"Searchbar\">\n//         <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n//           <button type=\"submit\" className=\"SearchForm-button\">\n//             <span className=\"SearchForm-button-label\">Search</span>\n//           </button>\n\n//           <input\n//             className=\"SearchForm-input\"\n//             type=\"text\"\n//             value={this.state.query}\n//             onChange={this.handleChange}\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n\nconst Searchbar = ({onSubmit}) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n  };\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import axios from 'axios';\n\nconst API_KEY = '20391200-b9e8acd71c8c6c300b0440642';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n\n// НЕ РАБОТАЕТ???\n// axios.defaults.baseURL = BASE_URL;\n// axios.defaults.params = {\n//   key: API_KEY,\n//   image_type: 'photo',\n//   orientation: 'horizontal',\n//   per_page: 12,\n// };\n\n// const fetchImagesQuery = async ( searchQuery, currentPage ) => {\n//   try {\n//     const { data } = await axios.get('', {\n//       params: { searchQuery, currentPage },\n//     });\n//     console.log((data.hits));\n//     return data.hits;\n//   } catch (error) {\n//     console.log('error', { error });\n//     return [];\n//   }\n// };\n\nconst fetchImagesQuery = ({ searchQuery = '', currentPage = 1 }) => {\n  return axios\n    .get(\n      `${BASE_URL}?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&per_page=12&page=${currentPage}`,\n    )\n    .then(response => response.data.hits);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchImagesQuery };\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport ImageGallery from './components/ImageGallery';\nimport Searchbar from './components/Searchbar';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\n\nimport imagesApi from './services/imagesApi';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [modalImgUrl, setModalImgUrl] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchImages = () => {\n      setIsLoading(true);\n      imagesApi\n        .fetchImagesQuery({ searchQuery, currentPage })\n        .then(resImages => {\n          setImages(prevImages => [...prevImages, ...resImages]);\n          if (currentPage !== 1) {\n            scrollToLoadBtn();\n          }\n        })\n        .catch(error => setError(error.message))\n        .finally(() => setIsLoading(false));\n    };\n\n    // НЕ РАБОТАЕТ???\n    // const fetchImages = async () => {\n    //   setIsLoading(true);\n    //   try {\n    //     const { hits } = await fetchImagesQuery(searchQuery, currentPage);\n\n    //     setImages(prevImages => [...prevImages, ...hits]);\n\n    //     if (currentPage !== 1) {\n    //       scrollToLoadBtn();\n    //     }\n    //   } catch (error) {\n    //     setError({ error });\n    //   } finally {\n    //     setIsLoading(false);\n    //   }\n    // };\n\n    fetchImages();\n  }, [searchQuery, currentPage]);\n\n  const updatePage = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n\n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    setModalImgUrl('');\n    setCurrentPage(1);\n    setImages([]);\n    setShowModal(false);\n    setIsLoading(false);\n    setError(null);\n  };\n\n  const openModal = largeImgUrl => {\n    setModalImgUrl(largeImgUrl);\n    setShowModal(true);\n  };\n\n  const toggleModal = () => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n\n  const scrollToLoadBtn = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const shouldRenderBtn = images.length > 0 && !isLoading;\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onChangeQuery} />\n      {error && <p>Something went wrong: {error.message}</p>}\n      <ImageGallery images={images} onClick={openModal} />\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={modalImgUrl} alt=\"\" />\n        </Modal>\n      )}\n      {isLoading && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          className=\"Loader\"\n        />\n      )}\n      {shouldRenderBtn && <Button onClick={updatePage} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}