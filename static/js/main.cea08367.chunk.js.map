{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/imagesApi.js","components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["ImageGalleryItem","url","dataUrl","tags","className","src","alt","data-url","ImageGallery","images","onClick","map","id","webformatURL","largeImageUrl","title","searchQuery","currentPage","axios","get","then","response","data","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","Button","App","isLoading","error","modalImgUrl","showModal","onChangeQuery","fetchImages","options","imagesApi","prevState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","openModal","console","log","target","dataset","closeModal","prevProps","shouldRenderBtn","length","message","onClose","PureComponent","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cea08367.chunk.js","sourcesContent":["const ImageGalleryItem = ({ url, dataUrl, tags }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={url}\n      alt={tags}\n      data-url={dataUrl}\n      className=\"ImageGalleryItem-image\"\n    />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className=\"ImageGallery\" onClick={onClick}>\n    {images.map(({ id, webformatURL, largeImageUrl, tags }) => (\n      <ImageGalleryItem\n        key={id}\n        url={webformatURL}\n        title={tags}\n        dataUrl={largeImageUrl}\n      />\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n","import axios from 'axios';\n\nconst apiKey = '20391200-b9e8acd71c8c6c300b0440642';\nconst basicUrl = 'https://pixabay.com/api/';\n\nconst fetchImagesQuery = ({ searchQuery = '', currentPage = 1 }) => {\n  return axios\n    .get(\n      `${basicUrl}?key=${apiKey}&q=${searchQuery}&image_type=photo&orientation=horizontal&per_page=12&page=${currentPage}`,\n    )\n    .then(response => response.data.hits);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchImagesQuery };\n","import { Component } from 'react';\n// import { useState } from 'react';\n\nclass Searchbar extends Component {\n  state = { query: '' };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.query}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n\n// const Searchbar = onSubmit => {\n//   const [query, setQuery] = useState('');\n\n//   const handleChange = e => {\n//     setQuery(e.currentTarget.value);\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     onSubmit(query);\n//     setQuery('');\n//   };\n\n//   return (\n//     <header className=\"Searchbar\">\n//       <form className=\"SearchForm\" onSubmit={handleSubmit}>\n//         <button type=\"submit\" className=\"SearchForm-button\">\n//           <span className=\"SearchForm-button-label\">Search</span>\n//         </button>\n\n//         <input\n//           className=\"SearchForm-input\"\n//           type=\"text\"\n//           value={query}\n//           onChange={handleChange}\n//           autoComplete=\"off\"\n//           autoFocus\n//           placeholder=\"Search images and photos\"\n//         />\n//       </form>\n//     </header>\n//   );\n// };\n\n// export default Searchbar;\n","const Button = ({ onClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nexport default Button;\n","import { PureComponent } from 'react';\n// import { useState, useEffect, useRef } from 'react';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport imagesApi from './services/imagesApi';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Modal from 'react';\nimport Button from './components/Button/Button';\n\nclass App extends PureComponent {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    modalImgUrl: '',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      isLoading: false,\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n    this.setState({ isLoading: true });\n    imagesApi\n      .fetchImagesQuery(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  openModal = e => {\n    console.log('largeImageUrl', e.target.dataset.url);\n    this.setState({\n      modalImgUrl: e.target.dataset.url,\n      showModal: true,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalImgUrl: '',\n      showModal: false,\n    });\n  };\n\n  render() {\n    const { images, isLoading, error, showModal, modalImgUrl } = this.state;\n    const shouldRenderBtn = images.length > 0 && !isLoading;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n        {error && <p>Something went wrong: {error.message}</p>}\n\n        <ImageGallery images={images} onClick={this.openModal} />\n        {showModal && (\n          <Modal onClose={this.closeModal}>\n            <img src={modalImgUrl} alt=\"\" />\n          </Modal>\n        )}\n        {isLoading && <p>Loading...</p>}\n        {shouldRenderBtn && <Button onClick={this.fetchImages} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// const App = () => {\n//   const [images, setImages] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [modalImgUrl, setModalImgUrl] = useState('');\n//   const [showModal, setShowModal] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const usePrevious = value => {\n//     const ref = useRef();\n//     useEffect(() => {\n//       ref.current = value;\n//     });\n//     return ref.current;\n//   };\n\n//   const prevQuery = usePrevious(searchQuery);\n\n//   useEffect(() => {\n//     if (prevQuery !== searchQuery) {\n//       fetchImages();\n//     }\n//   });\n\n//   const onChangeQuery = query => {\n//     setSearchQuery(query);\n//     setModalImgUrl('');\n//     setCurrentPage(1);\n//     setImages([]);\n//     setShowModal(false);\n//     setIsLoading(false);\n//     setError(null);\n//   };\n\n//   const fetchImages = () => {\n//     setIsLoading(true);\n\n//     imagesApi\n//       .fetchImagesQuery(searchQuery, currentPage)\n//       .then(images => {\n//         setImages(prevImages => [...prevImages, ...images]);\n//         setCurrentPage(prevPage => prevPage + 1);\n//         if (currentPage !== 1) {\n//           scrollToLoadBtn();\n//         }\n//       })\n//       .catch(error => setError({ error }))\n//       .finally(setIsLoading(false));\n//   };\n\n//   const openModal = largeImgUrl => {\n//     setModalImgUrl(largeImgUrl);\n//     setShowModal(true);\n//   };\n\n//   const toggleModal = () => {\n//     setShowModal(prev => !prev);\n//   };\n\n//   const scrollToLoadBtn = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   const shouldRenderBtn = images.length > 0 && !isLoading;\n\n//   return (\n//     <div className=\"App\">\n//       <Searchbar onSubmit={onChangeQuery} />\n//       {error && <p>Something went wrong: {error.message}</p>}\n//       <ImageGallery images={images} onClick={openModal} />\n//       {showModal && (\n//         <Modal onClose={toggleModal}>\n//           <img src={modalImgUrl} alt=\"\" />\n//         </Modal>\n//       )}\n//       {isLoading && <p>Loading...</p>}\n//       {shouldRenderBtn && <Button onClick={fetchImages} />}\n//     </div>\n//   );\n// };\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}